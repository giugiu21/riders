{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"./../../services/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction HomeComponent_div_0_p_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 19);\n    i0.ɵɵtext(1, \"Il campo username \\u00E8 obbligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_div_0_p_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 19);\n    i0.ɵɵtext(1, \"Il campo email \\u00E8 obbligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_div_0_p_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 19);\n    i0.ɵɵtext(1, \"Il campo password \\u00E8 obbligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_div_0_p_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 19);\n    i0.ɵɵtext(1, \"Per proseguire \\u00E8 obbligatorio accettare i termini e le condizioni del sito\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_div_0_Template_form_ngSubmit_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onSubmitLogin());\n    });\n    i0.ɵɵelementStart(3, \"h2\");\n    i0.ɵɵtext(4, \"Accedi a Riders\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n    i0.ɵɵtext(7, \"Username:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 7);\n    i0.ɵɵtext(11, \"Password:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 9)(14, \"button\", 10);\n    i0.ɵɵtext(15, \"Accedi\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(16, \"div\", 11)(17, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_div_0_Template_form_ngSubmit_17_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onSubmitRegistration());\n    });\n    i0.ɵɵelementStart(18, \"h2\");\n    i0.ɵɵtext(19, \"Registrati a Riders\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 4)(21, \"label\", 5);\n    i0.ɵɵtext(22, \"Username:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"input\", 6);\n    i0.ɵɵtemplate(24, HomeComponent_div_0_p_24_Template, 2, 0, \"p\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\", 4)(26, \"label\", 13);\n    i0.ɵɵtext(27, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(28, \"input\", 14);\n    i0.ɵɵtemplate(29, HomeComponent_div_0_p_29_Template, 2, 0, \"p\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"div\", 4)(31, \"label\", 7);\n    i0.ɵɵtext(32, \"Password:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(33, \"input\", 8);\n    i0.ɵɵtemplate(34, HomeComponent_div_0_p_34_Template, 2, 0, \"p\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"div\", 15);\n    i0.ɵɵelement(36, \"input\", 16);\n    i0.ɵɵelementStart(37, \"label\", 17);\n    i0.ɵɵtext(38, \"Dichiaro di accettare i Termini di servizio\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(39, \"div\", 18);\n    i0.ɵɵtemplate(40, HomeComponent_div_0_p_40_Template, 2, 0, \"p\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"div\", 9)(42, \"button\", 10);\n    i0.ɵɵtext(43, \"Registrati\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.loginForm);\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.registrationForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", !((tmp_2_0 = ctx_r0.registrationForm.get(\"username\")) == null ? null : tmp_2_0.valid) && ctx_r0.registrationForm.get(\"username\").touched);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !((tmp_3_0 = ctx_r0.registrationForm.get(\"email\")) == null ? null : tmp_3_0.valid) && ctx_r0.registrationForm.get(\"email\").touched);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !((tmp_4_0 = ctx_r0.registrationForm.get(\"password\")) == null ? null : tmp_4_0.valid) && ctx_r0.registrationForm.get(\"password\").touched);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", !((tmp_5_0 = ctx_r0.registrationForm.get(\"accetto\")) == null ? null : tmp_5_0.valid) && ctx_r0.registrationForm.get(\"accetto\").touched);\n  }\n}\nexport class HomeComponent {\n  constructor(authService,\n  //private messageService: MessageService,\n  userService, router) {\n    this.authService = authService;\n    this.userService = userService;\n    this.router = router;\n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n    this.registrationForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.requiredTrue),\n      password: new FormControl('', Validators.required)\n    });\n  }\n  onSubmitLogin() {\n    const user = {\n      username: this.loginForm.value.username,\n      password: this.loginForm.value.password\n    };\n    this.authService.login(user.username, user.password).subscribe({\n      next: res => {\n        if (res) {\n          this.authService.saveStorage(res);\n          //this.messageService.add({severity: 'success', summary: 'Success!', detail: 'Il Login è andato a buon fine', life: 3000});\n          if (res.rider_Id != 0) {\n            this.router.navigate(['rider-home']);\n          }\n          if (res.restaurantOwner_Id != 0) {\n            this.router.navigate(['owner-home']);\n          }\n        } else {\n          this.loginError = \"Email o password errati\";\n          //this.messageService.add({severity: 'error', summary: 'Errore!', detail: 'Il Login non è andato a buon fine', life: 3000});\n        }\n      },\n\n      error: err => {\n        console.log(err);\n        this.loginError = \"Email o password errati\";\n        // this.messageService.add({severity: 'error', summary: 'Errore!', detail: 'Il Login non è andato a buon fine', life: 3000});\n      }\n    });\n  }\n\n  onSubmitRegistration() {}\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"main-container\", 4, \"ngIf\"], [1, \"main-container\"], [1, \"login-column\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-element\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"formControlName\", \"username\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"submit-btn\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"registration-column\"], [\"class\", \"help is-danger\", 4, \"ngIf\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"value\", \"\", \"id\", \"accetto\", \"name\", \"accetto\", \"formControlName\", \"accetto\", 1, \"form-check-input\", \"me-2\"], [\"for\", \"accetto\", 1, \"form-check-label\"], [1, \"termini-condizioni\"], [1, \"help\", \"is-danger\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, HomeComponent_div_0_Template, 44, 6, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.authService.isLogged());\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.CheckboxControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName],\n  styles: [\".main-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 10% 20px;\\n}\\n.main-container[_ngcontent-%COMP%]   .login-column[_ngcontent-%COMP%] {\\n  width: 50%;\\n  padding: 20px;\\n}\\n.main-container[_ngcontent-%COMP%]   .registration-column[_ngcontent-%COMP%] {\\n  width: 50%;\\n  padding: 20px;\\n}\\n\\n.submit-btn[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n}\\n.submit-btn[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  color: black;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQUFKO0FBR0k7RUFDSSxVQUFBO0VBQ0EsYUFBQTtBQURSO0FBSUk7RUFDSSxVQUFBO0VBQ0EsYUFBQTtBQUZSOztBQU1BO0VBQ0ksV0FBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtBQUhKO0FBS0k7RUFDSSxZQUFBO0FBSFIiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5tYWluLWNvbnRhaW5lcntcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgbWFyZ2luOiAxMCUgMjBweDtcblxuXG4gICAgLmxvZ2luLWNvbHVtbntcbiAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgcGFkZGluZzogMjBweDtcbiAgICB9XG5cbiAgICAucmVnaXN0cmF0aW9uLWNvbHVtbntcbiAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgcGFkZGluZzogMjBweDtcbiAgICB9XG59XG5cbi5zdWJtaXQtYnRue1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgXG4gICAgYnV0dG9ue1xuICAgICAgICBjb2xvcjogYmxhY2s7XG4gICAgfVxufVxuXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","HomeComponent","constructor","authService","userService","router","username","required","password","email","requiredTrue","onSubmitLogin","user","loginForm","value","login","subscribe","next","res","saveStorage","rider_Id","navigate","restaurantOwner_Id","loginError","error","err","console","log","onSubmitRegistration","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/giulia/Documents/Progetti/riders/riders/src/app/components/home/home.component.ts","/Users/giulia/Documents/Progetti/riders/riders/src/app/components/home/home.component.html"],"sourcesContent":["import { RestaurantOwner } from './../../models/restaurant-owner.model';\nimport { UserService } from './../../services/user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\n//import { MessageService } from 'primeng/api';\nimport { Router } from '@angular/router';\nimport { pipe, take } from 'rxjs';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  //providers: [MessageService],\n})\nexport class HomeComponent {\n\n  loginError: string;\n  \n\n  constructor(\n    public authService: AuthService,\n    //private messageService: MessageService,\n    private userService: UserService,\n    private router: Router){}\n \n\n  loginForm = new FormGroup({\n    username: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required),\n  }) \n\n  registrationForm = new FormGroup({\n    username: new FormControl('', Validators.required),\n    email: new FormControl('', Validators.requiredTrue),\n    password: new FormControl('', Validators.required),\n  }) \n\n  onSubmitLogin(){\n    const user = {\n      username: this.loginForm.value.username,\n      password: this.loginForm.value.password,\n    };\n    this.authService.login(user.username, user.password).subscribe({\n      next: (res) =>{\n        if(res){\n          this.authService.saveStorage(res);\n          \n          //this.messageService.add({severity: 'success', summary: 'Success!', detail: 'Il Login è andato a buon fine', life: 3000});\n\n          if(res.rider_Id != 0){\n            this.router.navigate(['rider-home']);\n          }\n        \n          if(res.restaurantOwner_Id != 0){\n            this.router.navigate(['owner-home']);\n          }\n        }\n        else{\n          this.loginError = \"Email o password errati\";\n          //this.messageService.add({severity: 'error', summary: 'Errore!', detail: 'Il Login non è andato a buon fine', life: 3000});\n        }\n      },\n      error: (err) =>{\n        console.log(err);\n        this.loginError = \"Email o password errati\";\n       // this.messageService.add({severity: 'error', summary: 'Errore!', detail: 'Il Login non è andato a buon fine', life: 3000});\n      }\n  });\n  \n  \n}  \n\nonSubmitRegistration(){\n}\n\n}   ","<div class=\"main-container\" *ngIf=\"!authService.isLogged()\">\n    <div class=\"login-column\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmitLogin()\">\n            <h2>Accedi a Riders</h2>\n            <div class=\"form-element\">\n                <label for=\"username\">Username:</label>\n                <input type=\"text\"  id=\"username\" name=\"username\" class=\"form-control\" formControlName=\"username\">\n                <!-- <p class=\"help is-danger\" *ngIf=\"!loginForm.get('username')?.valid && loginForm.get('username').touched\">Il campo username è obbligatorio</p>  -->\n            </div>\n            <div class=\"form-element\">\n                <label for=\"password\">Password:</label>\n                <input type=\"password\"  id=\"password\" name=\"password\" class=\"form-control\" formControlName=\"password\">\n                <!-- <p class=\"help is-danger\" *ngIf=\"!loginForm.get('password')?.valid && loginForm.get('password').touched\">Il campo password è obbligatorio</p>  -->\n            </div>\n            <div class=\"submit-btn\">\n                <button type=\"submit\" class=\"btn btn-primary\">Accedi</button>\n            </div>\n        </form>\n    </div>\n    <div class=\"registration-column\">\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmitRegistration()\">\n            <h2>Registrati a Riders</h2>\n            <div class=\"form-element\">\n                <label for=\"username\">Username:</label>\n                <input type=\"text\"  id=\"username\" name=\"username\" class=\"form-control\" formControlName=\"username\">\n                <p class=\"help is-danger\" *ngIf=\"!registrationForm.get('username')?.valid && registrationForm.get('username').touched\">Il campo username è obbligatorio</p>\n            </div>\n            <div class=\"form-element\">\n                <label for=\"email\">Email:</label>\n                <input type=\"text\"  id=\"email\" name=\"email\" class=\"form-control\" formControlName=\"email\">\n                <p class=\"help is-danger\" *ngIf=\"!registrationForm.get('email')?.valid && registrationForm.get('email').touched\">Il campo email è obbligatorio</p>\n            </div>\n            <div class=\"form-element\">\n                <label for=\"password\">Password:</label>\n                <input type=\"password\"  id=\"password\" name=\"password\" class=\"form-control\" formControlName=\"password\">\n                <p class=\"help is-danger\" *ngIf=\"!registrationForm.get('password')?.valid && registrationForm.get('password').touched\">Il campo password è obbligatorio</p>\n            </div>\n            <div class=\"form-check\">\n                <input class=\"form-check-input me-2\" type=\"checkbox\" value=\"\" id=\"accetto\" name=\"accetto\" formControlName=\"accetto\"/>\n                    <label class=\"form-check-label\" for=\"accetto\">Dichiaro di accettare i Termini di servizio</label>\n            </div>\n            <div class=\"termini-condizioni\">\n                <p class=\"help is-danger\" *ngIf=\"!registrationForm.get('accetto')?.valid && registrationForm.get('accetto').touched\">Per proseguire è obbligatorio accettare i termini e le condizioni del sito</p>\n            </div>\n            <div class=\"submit-btn\">\n                <button type=\"submit\" class=\"btn btn-primary\">Registrati</button>\n            </div>\n        </form>\n    </div>\n</div>\n\n\n<!-- <div *ngIf=\"authService.isLogged()\">\n    <div *ngIf=\"this.user.rider_Id != 0\">\n        <h2>Hello Rider</h2>\n    </div>\n    <div *ngIf=\"this.user.restaurantOwner_Id != 0\">\n        <h2>Hello RestaurantOwner</h2>\n    </div>\n    <button class=\"btn btn-primary\" (click)=\"authService.logout()\">LogOut</button>\n</div> -->\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}