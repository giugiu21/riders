{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"./../../services/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction HomeComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_div_0_Template_form_ngSubmit_2_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onSubmitLogin());\n    });\n    i0.ɵɵelementStart(3, \"h2\");\n    i0.ɵɵtext(4, \"Se sei gi\\u00E0 registrato effettua il login per iniziare\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 5)(6, \"label\", 6);\n    i0.ɵɵtext(7, \"Username:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 5)(10, \"label\", 8);\n    i0.ɵɵtext(11, \"Password:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 10)(14, \"button\", 11);\n    i0.ɵɵtext(15, \"Login\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelement(16, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.loginForm);\n  }\n}\nfunction HomeComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function HomeComponent_div_1_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.authService.logout());\n    });\n    i0.ɵɵtext(2, \"LogOut\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class HomeComponent {\n  constructor(authService,\n  //private messageService: MessageService,\n  userService, router) {\n    this.authService = authService;\n    this.userService = userService;\n    this.router = router;\n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n  onSubmitLogin() {\n    const user = {\n      username: this.loginForm.value.username,\n      password: this.loginForm.value.password\n    };\n    this.authService.login(user.username, user.password).subscribe({\n      next: res => {\n        this.user = res;\n        if (res) {\n          this.authService.saveStorage(res);\n          //this.messageService.add({severity: 'success', summary: 'Success!', detail: 'Il Login è andato a buon fine', life: 3000});\n          this.router.navigate(['home']);\n        } else {\n          this.loginError = \"Email o password errati\";\n          //this.messageService.add({severity: 'error', summary: 'Errore!', detail: 'Il Login non è andato a buon fine', life: 3000});\n        }\n      },\n\n      error: err => {\n        console.log(err);\n        this.loginError = \"Email o password errati\";\n        // this.messageService.add({severity: 'error', summary: 'Errore!', detail: 'Il Login non è andato a buon fine', life: 3000});\n      }\n    });\n  }\n}\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"main-container\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"main-container\"], [1, \"login-column\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-element\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"formControlName\", \"username\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"submit-btn\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"registration-column\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, HomeComponent_div_0_Template, 17, 1, \"div\", 0);\n      i0.ɵɵtemplate(1, HomeComponent_div_1_Template, 3, 0, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.authService.isLogged());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.authService.isLogged());\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName],\n  styles: [\".main-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  margin: 10% 20px;\\n}\\n.main-container[_ngcontent-%COMP%]   .login-column[_ngcontent-%COMP%] {\\n  width: 50%;\\n}\\n\\n.submit-btn[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n  color: black;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxhQUFBO0VBQ0EsZ0JBQUE7QUFBSjtBQUdJO0VBQ0ksVUFBQTtBQURSOztBQUtBO0VBQ0ksV0FBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7QUFGSiIsInNvdXJjZXNDb250ZW50IjpbIlxuLm1haW4tY29udGFpbmVye1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWFyZ2luOiAxMCUgMjBweDtcblxuXG4gICAgLmxvZ2luLWNvbHVtbntcbiAgICAgICAgd2lkdGg6IDUwJTtcbiAgICB9XG59XG5cbi5zdWJtaXQtYnRue1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgY29sb3I6IGJsYWNrO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;;;ICFnEC,8BAA4D;IAEtBA;MAAAA;MAAA;MAAA,OAAYA,qCAAe;IAAA,EAAC;IACtDA,0BAAI;IAAAA,yEAAoD;IAAAA,iBAAK;IAC7DA,8BAA0B;IACAA,yBAAS;IAAAA,iBAAQ;IACvCA,2BAAkG;IAEtGA,iBAAM;IACNA,8BAA0B;IACAA,0BAAS;IAAAA,iBAAQ;IACvCA,4BAAsG;IAE1GA,iBAAM;IACNA,gCAAwB;IAC0BA,sBAAK;IAAAA,iBAAS;IAIxEA,2BAEM;IACVA,iBAAM;;;;IApBQA,eAAuB;IAAvBA,4CAAuB;;;;;;IAuBrCA,2BAAoC;IACAA;MAAAA;MAAA;MAAA,OAASA,0CAAoB;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAS;;;ADZlF,OAAM,MAAOC,aAAa;EAKxBC,YACSC,WAAwB;EAC/B;EACQC,WAAwB,EACxBC,MAAc;IAHf,gBAAW,GAAXF,WAAW;IAEV,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IAGhB,cAAS,GAAG,IAAIP,SAAS,CAAC;MACxBQ,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACQ,QAAQ,CAAC;MAClDC,QAAQ,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACQ,QAAQ;KAClD,CAAC;EANwB;EAQ1BE,aAAa;IACX,MAAMC,IAAI,GAAG;MACXJ,QAAQ,EAAE,IAAI,CAACK,SAAS,CAACC,KAAK,CAACN,QAAQ;MACvCE,QAAQ,EAAE,IAAI,CAACG,SAAS,CAACC,KAAK,CAACJ;KAChC;IACD,IAAI,CAACL,WAAW,CAACU,KAAK,CAACH,IAAI,CAACJ,QAAQ,EAAEI,IAAI,CAACF,QAAQ,CAAC,CAACM,SAAS,CAAC;MAC7DC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACN,IAAI,GAAGM,GAAG;QACf,IAAGA,GAAG,EAAC;UACL,IAAI,CAACb,WAAW,CAACc,WAAW,CAACD,GAAG,CAAC;UAEjC;UAEA,IAAI,CAACX,MAAM,CAACa,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;SAC/B,MACG;UACF,IAAI,CAACC,UAAU,GAAG,yBAAyB;UAC3C;;MAEJ,CAAC;;MACDC,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAI,CAACF,UAAU,GAAG,yBAAyB;QAC5C;MACD;KACH,CAAC;EACJ;;;AA3CalB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCd1B5B,+DAsBM;MAGNA,8DAEM;;;MA3BuBA,kDAA6B;MAyBpDA,eAA4B;MAA5BA,iDAA4B","names":["FormControl","FormGroup","Validators","i0","HomeComponent","constructor","authService","userService","router","username","required","password","onSubmitLogin","user","loginForm","value","login","subscribe","next","res","saveStorage","navigate","loginError","error","err","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/giulia/Documents/Progetti/riders/riders/src/app/components/home/home.component.ts","/Users/giulia/Documents/Progetti/riders/riders/src/app/components/home/home.component.html"],"sourcesContent":["import { UserService } from './../../services/user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\n//import { MessageService } from 'primeng/api';\nimport { Router } from '@angular/router';\nimport { pipe, take } from 'rxjs';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  //providers: [MessageService],\n})\nexport class HomeComponent {\n\n  loginError: string;\n  user: any;\n\n  constructor(\n    public authService: AuthService,\n    //private messageService: MessageService,\n    private userService: UserService,\n    private router: Router){}\n \n\n  loginForm = new FormGroup({\n    username: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required),\n  }) \n\n  onSubmitLogin(){\n    const user = {\n      username: this.loginForm.value.username,\n      password: this.loginForm.value.password,\n    };\n    this.authService.login(user.username, user.password).subscribe({\n      next: (res) =>{\n        this.user = res;\n        if(res){\n          this.authService.saveStorage(res);\n          \n          //this.messageService.add({severity: 'success', summary: 'Success!', detail: 'Il Login è andato a buon fine', life: 3000});\n\n          this.router.navigate(['home']);\n        }\n        else{\n          this.loginError = \"Email o password errati\";\n          //this.messageService.add({severity: 'error', summary: 'Errore!', detail: 'Il Login non è andato a buon fine', life: 3000});\n        }\n      },\n      error: (err) =>{\n        console.log(err);\n        this.loginError = \"Email o password errati\";\n       // this.messageService.add({severity: 'error', summary: 'Errore!', detail: 'Il Login non è andato a buon fine', life: 3000});\n      }\n  }); \n}   \n}   ","<div class=\"main-container\" *ngIf=\"!authService.isLogged()\">\n    <div class=\"login-column\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmitLogin()\">\n            <h2>Se sei già registrato effettua il login per iniziare</h2>\n            <div class=\"form-element\">\n                <label for=\"username\">Username:</label>\n                <input type=\"text\"  id=\"username\" name=\"username\" class=\"form-control\" formControlName=\"username\">\n                <!-- <p class=\"help is-danger\" *ngIf=\"!loginForm.get('username')?.valid && loginForm.get('username').touched\">Il campo username è obbligatorio</p>  -->\n            </div>\n            <div class=\"form-element\">\n                <label for=\"password\">Password:</label>\n                <input type=\"password\"  id=\"password\" name=\"password\" class=\"form-control\" formControlName=\"password\">\n                <!-- <p class=\"help is-danger\" *ngIf=\"!loginForm.get('password')?.valid && loginForm.get('password').touched\">Il campo password è obbligatorio</p>  -->\n            </div>\n            <div class=\"submit-btn\">\n                <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n            </div>\n        </form>\n    </div>\n    <div class=\"registration-column\">\n        \n    </div>\n</div>\n\n\n<div *ngIf=\"authService.isLogged()\">\n    <button class=\"btn btn-primary\" (click)=\"authService.logout()\">LogOut</button>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}