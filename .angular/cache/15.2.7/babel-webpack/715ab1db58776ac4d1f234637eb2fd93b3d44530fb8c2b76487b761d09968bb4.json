{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"./../../services/user.service\";\nimport * as i3 from \"@angular/forms\";\nexport class HomeComponent {\n  constructor(authService, userService) {\n    this.authService = authService;\n    this.userService = userService;\n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n  onSubmitLogin() {\n    const user = {\n      username: this.loginForm.value.username,\n      password: this.loginForm.value.password\n    };\n    this.userService.insertUser(this.form.value).pipe(take(1)).subscribe({\n      next: res => {\n        if (res) {\n          this.userService.datiUtente.next(user);\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Success!',\n            detail: 'Grazie per esserti registrato!',\n            life: 2000\n          });\n          setTimeout(() => this.router.navigate(['home']), 2000);\n        } else {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Error!',\n            detail: 'Errore nella registrazione, riprova!',\n            life: 2000\n          });\n        }\n      },\n      error: err => {\n        console.log(err);\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Error!',\n          detail: 'Errore nella registrazione, riprova!',\n          life: 2000\n        });\n      }\n    });\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.UserService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  features: [i0.ɵɵProvidersFeature([MessageService])],\n  decls: 16,\n  vars: 1,\n  consts: [[1, \"main-container\"], [1, \"login-column\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-element\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"formControlName\", \"username\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"registration-column\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmitLogin();\n      });\n      i0.ɵɵelementStart(3, \"h2\");\n      i0.ɵɵtext(4, \"Se sei gi\\u00E0 registrato effettua il login per iniziare\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Username:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 8);\n      i0.ɵɵtext(14, \"Login\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(15, \"div\", 9);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".main-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  margin: 10% 20px;\\n}\\n.main-container[_ngcontent-%COMP%]   .login-column[_ngcontent-%COMP%] {\\n  width: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxhQUFBO0VBQ0EsZ0JBQUE7QUFBSjtBQUdJO0VBQ0ksVUFBQTtBQURSIiwic291cmNlc0NvbnRlbnQiOlsiXG4ubWFpbi1jb250YWluZXJ7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBtYXJnaW46IDEwJSAyMHB4O1xuXG5cbiAgICAubG9naW4tY29sdW1ue1xuICAgICAgICB3aWR0aDogNTAlO1xuICAgIH1cbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAEnE,SAASC,cAAc,QAAQ,aAAa;;;;;AAQ5C,OAAM,MAAOC,aAAa;EAExBC,YACSC,WAAwB,EACvBC,WAAwB;IADzB,gBAAW,GAAXD,WAAW;IACV,gBAAW,GAAXC,WAAW;IAErB,cAAS,GAAG,IAAIN,SAAS,CAAC;MACxBO,QAAQ,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACO,QAAQ,CAAC;MAClDC,QAAQ,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACO,QAAQ;KAClD,CAAC;EALkC;EAOpCE,aAAa;IACX,MAAMC,IAAI,GAAG;MACXJ,QAAQ,EAAE,IAAI,CAACK,SAAS,CAACC,KAAK,CAACN,QAAQ;MACvCE,QAAQ,EAAE,IAAI,CAACG,SAAS,CAACC,KAAK,CAACJ;KAChC;IACD,IAAI,CAACH,WAAW,CAACQ,UAAU,CAAC,IAAI,CAACC,IAAI,CAACF,KAAK,CAAC,CAACG,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CACzDC,SAAS,CAAC;MACTC,IAAI,EAAGC,GAAG,IAAG;QACX,IAAGA,GAAG,EAAC;UACL,IAAI,CAACd,WAAW,CAACe,UAAU,CAACF,IAAI,CAACR,IAAI,CAAC;UACtC,IAAI,CAACW,cAAc,CAACC,GAAG,CAAC;YAACC,QAAQ,EAAE,SAAS;YAAEC,OAAO,EAAE,UAAU;YAAEC,MAAM,EAAE,gCAAgC;YAAEC,IAAI,EAAE;UAAI,CAAC,CAAC;UACzHC,UAAU,CAAC,MAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC;SACvD,MACG;UACF,IAAI,CAACR,cAAc,CAACC,GAAG,CAAC;YAACC,QAAQ,EAAE,OAAO;YAAEC,OAAO,EAAE,QAAQ;YAAEC,MAAM,EAAE,sCAAsC;YAAEC,IAAI,EAAE;UAAI,CAAC,CAAC;;MAE/H,CAAC;MACDI,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAI,CAACV,cAAc,CAACC,GAAG,CAAC;UAACC,QAAQ,EAAE,OAAO;UAAEC,OAAO,EAAE,QAAQ;UAAEC,MAAM,EAAE,sCAAsC;UAAEC,IAAI,EAAE;QAAI,CAAC,CAAC;MAC7H;KACD,CAAC;EACJ;;AAjCWxB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAgC;EAAAC,iCAFb,CAAClC,cAAc,CAAC;EAAAmC;EAAAC;EAAAC;EAAAC;IAAA;MCV7BC,8BAA4B;MAEUA;QAAA,OAAYC,mBAAe;MAAA,EAAC;MACtDD,0BAAI;MAAAA,yEAAoD;MAAAA,iBAAK;MAC7DA,8BAA0B;MACAA,yBAAS;MAAAA,iBAAQ;MACvCA,2BAAkG;MAEtGA,iBAAM;MACNA,8BAA0B;MACAA,0BAAS;MAAAA,iBAAQ;MACvCA,4BAAsG;MAE1GA,iBAAM;MACNA,kCAA8C;MAAAA,sBAAK;MAAAA,iBAAS;MAGpEA,0BAEM;MACVA,iBAAM;;;MAlBQA,eAAuB;MAAvBA,yCAAuB","names":["FormControl","FormGroup","Validators","MessageService","HomeComponent","constructor","authService","userService","username","required","password","onSubmitLogin","user","loginForm","value","insertUser","form","pipe","take","subscribe","next","res","datiUtente","messageService","add","severity","summary","detail","life","setTimeout","router","navigate","error","err","console","log","selectors","features","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/giulia/Documents/Progetti/riders/riders/src/app/components/home/home.component.ts","/Users/giulia/Documents/Progetti/riders/riders/src/app/components/home/home.component.html"],"sourcesContent":["import { UserService } from './../../services/user.service';\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  providers: [MessageService],\n})\nexport class HomeComponent {\n\n  constructor(\n    public authService: AuthService,\n    private userService: UserService){}\n\n  loginForm = new FormGroup({\n    username: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required),\n  }) \n\n  onSubmitLogin(){\n    const user = {\n      username: this.loginForm.value.username,\n      password: this.loginForm.value.password,\n    };\n    this.userService.insertUser(this.form.value).pipe(take(1))\n    .subscribe({\n      next: (res)=>{\n        if(res){\n          this.userService.datiUtente.next(user);\n          this.messageService.add({severity: 'success', summary: 'Success!', detail: 'Grazie per esserti registrato!', life: 2000});\n          setTimeout(() => this.router.navigate(['home']), 2000);\n        }\n        else{\n          this.messageService.add({severity: 'error', summary: 'Error!', detail: 'Errore nella registrazione, riprova!', life: 2000});\n        }\n      },\n      error: (err) =>{\n        console.log(err);\n        this.messageService.add({severity: 'error', summary: 'Error!', detail: 'Errore nella registrazione, riprova!', life: 2000});\n      }\n    })\n  }\n}\n","<div class=\"main-container\">\n    <div class=\"login-column\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmitLogin()\">\n            <h2>Se sei già registrato effettua il login per iniziare</h2>\n            <div class=\"form-element\">\n                <label for=\"username\">Username:</label>\n                <input type=\"text\"  id=\"username\" name=\"username\" class=\"form-control\" formControlName=\"username\">\n                <!-- <p class=\"help is-danger\" *ngIf=\"!loginForm.get('username')?.valid && loginForm.get('username').touched\">Il campo username è obbligatorio</p>  -->\n            </div>\n            <div class=\"form-element\">\n                <label for=\"password\">Password:</label>\n                <input type=\"password\"  id=\"password\" name=\"password\" class=\"form-control\" formControlName=\"password\">\n                <!-- <p class=\"help is-danger\" *ngIf=\"!loginForm.get('password')?.valid && loginForm.get('password').touched\">Il campo password è obbligatorio</p>  -->\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n        </form>\n    </div>\n    <div class=\"registration-column\">\n        \n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}