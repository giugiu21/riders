{"ast":null,"code":"import { ReplaySubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class UserService {\n  constructor() {\n    this.userRole = new ReplaySubject();\n    this.datiUtente = new ReplaySubject();\n  }\n  insertUser(user) {}\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)();\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,aAAa,QAAW,MAAM;;AAMnD,OAAM,MAAOC,WAAW;EAItBC;IAHA,aAAQ,GAAG,IAAIF,aAAa,EAAE;IAC9B,eAAU,GAAG,IAAIA,aAAa,EAAE;EAEhB;EAEhBG,UAAU,CAACC,IAAS,GAEpB;;AARWH,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAI,SAAXJ,WAAW;EAAAK,YAFV;AAAM","names":["ReplaySubject","UserService","constructor","insertUser","user","factory","providedIn"],"sourceRoot":"","sources":["/Users/giulia/Documents/Progetti/riders/riders/src/app/services/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, of} from 'rxjs';\nimport { USERS } from '../mocks/user.mock';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  userRole = new ReplaySubject();\n  datiUtente = new ReplaySubject();\n\n  constructor() { }\n\n  insertUser(user: any):Observable<any>{\n\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}